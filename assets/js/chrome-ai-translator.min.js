class ChromeAiTranslator{static Object=t=>{const e=new this(t);return e.extraData()};constructor(t){this.btnSelector=t.btnSelector||!1,this.btnClass=t.btnClass||!1,this.btnText=t.btnText||`Translate To ${t.targetLanguageLabel}`,this.stringSelector=t.stringSelector||!1,this.progressBarSelector=t.progressBarSelector||!1,this.onStartTranslationProcess=t.onStartTranslationProcess||(()=>{}),this.onComplete=t.onComplete||(()=>{}),this.onLanguageError=t.onLanguageError||(()=>{}),this.onBeforeTranslate=t.onBeforeTranslate||(()=>{}),this.onAfterTranslate=t.onAfterTranslate||(()=>{}),this.sourceLanguage=t.sourceLanguage||"en",this.targetLanguage=t.targetLanguage||"hi",this.targetLanguageLabel=t.targetLanguageLabel||"Hindi",this.sourceLanguageLabel=t.sourceLanguageLabel||"English"}extraData=async()=>{const t=await ChromeAiTranslator.languageSupportedStatus(this.sourceLanguage,this.targetLanguage,this.targetLanguageLabel,this.sourceLanguageLabel);return!0!==t?(this.onLanguageError(t),{}):(this.defaultLang=this.targetLanguage,{continueTranslation:this.continueTranslation,stopTranslation:this.stopTranslation,startTranslation:this.startTranslation,reInit:this.reInit,init:this.init})};static languageSupportedStatus=async(t,e,a,n)=>{const o=["en","es","ja","ar","de","bn","fr","hi","it","ko","nl","pl","pt","ru","th","tr","vi","zh","zh-hant","bg","cs","da","el","fi","hr","hu","id","iw","lt","no","ro","sk","sl","sv","uk","kn","ta","te","mr"].map(t=>t.toLowerCase()),r="https:"===window.location.protocol,s=window.isSecureContext;if(!window.hasOwnProperty("chrome")||!navigator.userAgent.includes("Chrome")||navigator.userAgent.includes("Edg")){const t=jQuery('<span style="color: #ff4646; display: inline-block;">\n                <strong>Important Notice:</strong>\n                <ol>\n                    <li>The Translator API, which leverages Chrome local AI models, is designed specifically for use with the Chrome browser.</li>\n                    <li>For comprehensive information about the Translator API, <a href="https://developer.chrome.com/docs/ai/translator-api" target="_blank">click here</a>.</li>\n                </ol>\n                <p>Please ensure you are using the Chrome browser for optimal performance and compatibility.</p>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n            </span>');return t}if(!("translation"in self&&"createTranslator"in self.translation||"ai"in self&&"translator"in self.ai||"Translator"in self&&"create"in self.Translator||r||s)){const t=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <strong>Important Notice:</strong>\n                <ol>\n                    <li>\n                        The Translator API is not functioning due to an insecure connection.\n                    </li>\n                    <li>\n                        Please switch to a secure connection (HTTPS) or add this URL to the list of insecure origins treated as secure by visiting \n                        <span data-clipboard-text="chrome://flags/#unsafely-treat-insecure-origin-as-secure" target="_blank" class="chrome-ai-translator-flags">\n                            <strong  style="color: #2271b1;">\n                                 chrome://flags/#unsafely-treat-insecure-origin-as-secure ${ChromeAiTranslator.svgIcons("copy")}\n                            </strong>\n                        </span>.\n                        Click on the URL to copy it, then open a new window and paste this URL to access the settings.\n                    </li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return t}if(!("translation"in self&&"createTranslator"in self.translation||"ai"in self&&"translator"in self.ai||"Translator"in self&&"create"in self.Translator)){const t=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Steps to Enable the Translator AI Modal:</h4>\n                <ol>\n                    <li>Open this URL in a new Chrome tab: <strong style="color: #2271b1;"><span data-clipboard-text="chrome://flags/#translation-api" target="_blank" class="chrome-ai-translator-flags">chrome://flags/#translation-api ${ChromeAiTranslator.svgIcons("copy")}</span></strong>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>Ensure that the <strong>Experimental translation API</strong> option is set to <strong>Enabled</strong>.</li>\n                    <li>Click on the <strong>Save</strong> button to apply the changes.</li>\n                    <li>The Translator AI modal should now be enabled and ready for use.</li>\n                </ol>\n                <p>For more information, please refer to the <a href="https://developer.chrome.com/docs/ai/translator-api" target="_blank">documentation</a>.</p>   \n                <p>If the issue persists, please ensure that your browser is up to date and restart your browser.</p>\n                <p>If you continue to experience issues after following the above steps, please <a href="https://my.coolplugins.net/account/support-tickets/" target="_blank" rel="noopener">open a support ticket</a> with our team. We are here to help you resolve any problems and ensure a smooth translation experience.</p>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n                </span>`);return t}if(!o.includes(e.toLowerCase())){const t=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <strong>Language Support Information:</strong>\n                <ol>\n                    <li>The current version of Chrome AI Translator does not support the Target Language <strong>${a} (${e})</strong>.</li>\n                    <li>To view the list of supported languages, please <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags"><strong style="color: #2271b1;">chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}</strong></span>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>Ensure your Chrome browser is updated to the latest version for optimal performance.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return t}if(!o.includes(t.toLowerCase())){const e=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <strong>Language Support Information:</strong>\n                <ol>\n                    <li>The current version of Chrome AI Translator does not support the Source Language <strong>${n} (${t})</strong></li>\n                    <li>To view the list of supported languages, please <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}</span>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>Ensure your Chrome browser is updated to the latest version for optimal performance.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return e}const l=await ChromeAiTranslator.languagePairAvality(t,e);if("after-download"===l||"downloadable"===l||"unavailable"===l){const o=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Installation Instructions for Language Packs:</h4>\n                <ol>\n                    <li>\n                        To proceed, please install the language pack for <strong>${a} (${e})</strong> or <strong>${n} (${t})</strong>.\n                    </li>\n                    <li>\n                        After installing the language pack, add this language to your browser's system languages in Chrome settings.<br>\n                        Go to <strong>Settings &gt; Languages &gt; Add languages</strong> and add <strong>${a}</strong> or <strong>${n}</strong> to your preferred languages list & reload the page.\n                    </li>\n                    <li>\n                        You can install it by visiting the following link: \n                        <strong style="color: #2271b1;">\n                            <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">\n                                chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}\n                            </span>\n                        </strong>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.\n                    </li>\n                    <li>\n                        Please check if both your source <strong>(<span style="color:#2271b1">${t}</span>)</strong> and target <strong>(<span style="color:#2271b1">${e}</span>)</strong> languages are available in the language packs list.\n                    </li>\n                    <li>\n                        You need to install both language packs for translation to work. You can search for each language by its language code: <strong>${t}</strong> and <strong>${e}</strong>.\n                    </li>\n                    <li>For more help, refer to the <a href="https://developer.chrome.com/docs/ai/translator-api#supported-languages" target="_blank">documentation to check supported languages</a>.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return o}if("downloading"===l){const o=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Language Pack Download In Progress:</h4>\n                <ol>\n                    <li>\n                        The language pack for <strong>${a} (${e})</strong> or <strong>${n} (${t})</strong> is already being downloaded.\n                    </li>\n                    <li>\n                        <strong>You do not need to start the download again.</strong> Please wait for the download to complete. Once finished, the translation feature will become available automatically.\n                    </li>\n                    <li>\n                        You can check the download progress by opening:\n                        <strong style="color: #2271b1;">\n                            <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">\n                                chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}\n                            </span>\n                        </strong>\n                        . Click on the URL to copy it, then open a new window and paste this URL in Chrome to view the status.\n                    </li>\n                    <li>\n                        <strong>What to do next:</strong>\n                        <ul style="margin-top: .5em;">\n                            <li>Wait for the download to finish. The status will change to <strong>Ready</strong> or <strong>Installed</strong> in the <strong>Language Packs</strong> section.</li>\n                            <li>After the language pack is installed, you may need to <strong>reload</strong> or <strong>restart</strong> your browser for the changes to take effect.</li>\n                        </ul>\n                    </li>\n                    <li>\n                        For more help, refer to the <a href="https://developer.chrome.com/docs/ai/translator-api#supported-languages" target="_blank">documentation to check supported languages</a>.\n                    </li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return o}if("readily"!==l&&"available"!==l){const o=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Language Pack Installation Required</h4>\n                <ol>\n                    <li>Please ensure that the language pack for <strong>${a} (${e})</strong> or <strong>${n} (${t})</strong> is installed and set as a preferred language in your browser.</li>\n                    <li>To install the language pack, visit <strong><span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}</span></strong>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>If you encounter any issues, please refer to the <a href="https://developer.chrome.com/docs/ai/translator-api#supported-languages" target="_blank">documentation to check supported languages</a> for further assistance.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="atlt-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return o}return!0};static languagePairAvality=async(t,e)=>{try{await self.Translator.create({sourceLanguage:t,targetLanguage:e,monitor(t){t.addEventListener("downloadprogress",t=>{console.log(`Downloaded ${100*t.loaded}%`)})}})}catch(t){console.log("err",t)}if("translation"in self&&"createTranslator"in self.translation){const a=await self.translation.canTranslate({sourceLanguage:t,targetLanguage:e});return a}if("ai"in self&&"translator"in self.ai){const a=await self.ai.translator.capabilities(),n=await a.languagePairAvailable(t,e);return n}if("Translator"in self&&"create"in self.Translator){const a=await self.Translator.availability({sourceLanguage:t,targetLanguage:e});return a}return!1};AITranslator=async t=>{if("translation"in self&&"createTranslator"in self.translation){const e=await self.translation.createTranslator({sourceLanguage:this.sourceLanguage,targetLanguage:t});return e}if("ai"in self&&"translator"in self.ai){const e=await self.ai.translator.create({sourceLanguage:this.sourceLanguage,targetLanguage:t});return e}if("Translator"in self&&"create"in self.Translator){const e=await self.Translator.create({sourceLanguage:this.sourceLanguage,targetLanguage:t});return e}return!1};init=async()=>{this.appendBtn(),this.translationStart=!1,this.completedTranslateIndex=0,this.completedCharacterCount=0,this.translateBtnEvents(),this.progressBarSelector&&this.addProgressBar()};appendBtn=()=>{this.translateBtn=jQuery(`<button class="button button-primary${this.btnClass?" "+this.btnClass:""}">${this.btnText}</button>`),jQuery(this.btnSelector).append(this.translateBtn)};formatCharacterCount=t=>t>=1e6?(t/1e6).toFixed(1)+"M":t>=1e3?(t/1e3).toFixed(1)+"K":t;translateBtnEvents=t=>this.btnSelector&&0!==jQuery(this.btnSelector).length?this.stringSelector&&0!==jQuery(this.stringSelector).length?(this.translateStatus=!0,this.translateBtn.off("click"),this.translateBtn.prop("disabled",!1),void(this.translationStart?this.translateStringEle.length>this.completedTranslateIndex+1?this.translateBtn.on("click",()=>{this.onStartTranslationProcess(),this.stringTranslation(this.completedTranslateIndex+1)}):(this.onComplete({translatedStringsCount:this.completedCharacterCount}),this.translateBtn.prop("disabled",!0)):this.translateBtn.on("click",this.startTranslationProcess))):this.onLanguageError("The string selector is missing. Please provide a valid selector for the strings to be translated."):this.onLanguageError("The button selector is missing. Please provide a valid selector for the button.");startTranslationProcess=async()=>{this.onStartTranslationProcess();const t=this.defaultLang;this.translationStart=!0,this.translateStringEle=jQuery(this.stringSelector),this.totalStringCount=Array.from(this.translateStringEle).map(t=>t.innerText.length).reduce((t,e)=>t+e,0),this.translator=await this.AITranslator(t),this.translateStringEle.length>0&&await this.stringTranslation(this.completedTranslateIndex)};stringTranslation=async t=>{if(!this.translateStatus)return;const e=this.translateStringEle[t];this.onBeforeTranslate(e);const a=e.innerText;let n=[];(e.childNodes.length>0&&!e.querySelector(".notranslate")||e.querySelector(".notranslate"))&&e.childNodes.forEach(t=>{3===t.nodeType&&""!==t.nodeValue.trim()&&n.push(t)}),n.length>0&&await this.stringTranslationBatch(n,0),this.completedCharacterCount+=a.length,this.completedTranslateIndex=t,this.progressBarSelector&&this.updateProgressBar(),this.onAfterTranslate(e),this.translateStringEle.length>t+1&&await this.stringTranslation(this.completedTranslateIndex+1),t===this.translateStringEle.length-1&&(this.translateBtn.prop("disabled",!0),this.onComplete({characterCount:this.completedCharacterCount}),jQuery(this.progressBarSelector).find(".chrome-ai-translator-strings-count").show().find(".totalChars").text(this.formatCharacterCount(this.completedCharacterCount)))};stringTranslationBatch=async(t,e)=>{const a=await this.translator.translate(t[e].nodeValue);return a&&""!==a&&(t[e].nodeValue=a),e<t.length-1&&await this.stringTranslationBatch(t,e+1),!0};addProgressBar=()=>{if(!document.querySelector("#chrome-ai-translator-modal .chrome-ai-translator_progress_bar")){const t=jQuery('\n                <div class="chrome-ai-translator_progress_bar" style="background-color: #f3f3f3;border-radius: 10px;overflow: hidden;margin: 1.5rem auto; width: 50%;">\n                <div class="chrome-ai-translator_progress" style="overflow: hidden;transition: width .5s ease-in-out; border-radius: 10px;text-align: center;width: 0%;height: 20px;box-sizing: border-box;background-color: #4caf50; color: #fff; font-weight: 600;"></div>\n                </div>\n                <div style="display:none; color: white;" class="chrome-ai-translator-strings-count hidden">\n                    Wahooo! You have saved your valuable time via auto translating \n                    <strong class="totalChars">0</strong> characters using \n                    <strong>\n                        Chrome AI Translator\n                    </strong>\n                </div>\n            ');jQuery(this.progressBarSelector).append(t)}};updateProgressBar=()=>{const t=this.completedCharacterCount/this.totalStringCount*1e3/10;let e=t.toString().split(".")[1]||"";e=e.length>0&&"0"!==e[0]?e[0]:"";const a=parseInt(t)+""+(""!==e?"."+e:"");jQuery(".chrome-ai-translator_progress").css({width:`${a}%`}).text(`${a}%`)};stopTranslation=()=>{this.translateStatus=!1};reInit=()=>{this.translateBtnEvents()};startTranslation=()=>{this.translateStatus=!0,this.startTranslationProcess(this.completedTranslateIndex+1)};static svgIcons=t=>{const e={copy:'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="16px" width="16px" xmlns="http://www.w3.org/2000/svg" fill="#2271b1"><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"></path></svg>'};return e[t]||""}}(t=>{function e(){const t=document.querySelectorAll(".chrome-ai-translator-flags"),e=async(t,e,a)=>{if(t&&""!==t)try{if(navigator&&navigator.clipboard&&navigator.clipboard.writeText)await navigator.clipboard.writeText(t);else{const e=document.createElement("div");if(e.textContent=t,document.body.appendChild(e),window.getSelection&&document.createRange){const t=document.createRange();t.selectNodeContents(e);const a=window.getSelection();a.removeAllRanges(),a.addRange(t)}document.execCommand&&document.execCommand("copy"),document.body.removeChild(e)}e(),setTimeout(a,800)}catch(t){console.error("Error copying text to clipboard:",t)}};t.forEach(t=>{t.classList.add("atlt-tooltip-element"),t.addEventListener("click",a=>{a.preventDefault();const n=t.querySelector(".atlt-tooltip");if(n)return;const o=document.createElement("span");o.textContent="Text to be copied.",o.className="atlt-tooltip",t.appendChild(o),e(t.getAttribute("data-clipboard-text"),()=>{o.classList.add("atlt-tooltip-active")},()=>{setTimeout(()=>{o.remove()},800)})})})}let a=null;t(document).ready(async()=>{let e=!1;const a=await ChromeAiTranslator.Object({mainWrapperSelector:"#ChromeAiTranslator-widget-model",btnSelector:"#ChromeAiTranslator-widget-model #chrome_ai_translator_element",stringSelector:"#ChromeAiTranslator-widget-model .atlt_string_container table tbody tr td.target.translate",progressBarSelector:"#ChromeAiTranslator-widget-model .atlt_translate_progress",sourceLanguage:"en",targetLanguage:locoConf.conf.locale.lang,targetLanguageLabel:locoConf.conf.locale.label,onStartTranslationProcess:n,onComplete:s,onLanguageError:i,onBeforeTranslate:r,onStopTranslation:o});a.hasOwnProperty("init")&&(t(document).on("click","#ChromeAiTranslator_settings_btn",function(){const n=t("#ChromeAiTranslator-widget-model .atlt_string_container table tbody tr td.target.translate");e||"function"!=typeof a.init?"function"==typeof a.reInit&&n.length>0&&a.reInit():n.length>0&&(e=!0,a.init())}),t(window).on("click",t=>{t.target.closest(".modal-content")||t.target.closest("#atlt-dialog")||a.stopTranslation()}),t(document).on("click",".ChromeAiTranslator-widget-header .close",()=>{a.stopTranslation()}))});const n=()=>{a=Date.now();const e=t("#ChromeAiTranslator-widget-model .modal-content .atlt_string_container");e[0].scrollHeight>100&&t("#ChromeAiTranslator-widget-model .atlt_translate_progress").fadeIn("slow")},o=()=>{t("#ChromeAiTranslator-widget-model .atlt_translate_progress").fadeOut("slow")},r=e=>{const a=t("#ChromeAiTranslator-widget-model .modal-content .atlt_string_container"),n=t=>{a.scrollTop(t)},o=a[0].getBoundingClientRect(),r=e.closest("tr").offsetTop,s=a.height();r>s+o.y&&n(r-s+e.offsetHeight)},s=e=>{const n=Math.round((Date.now()-a)/1e3);t("#ChromeAiTranslator-widget-model .atlt_stats").fadeIn("slow");const o=t("#ChromeAiTranslator-widget-model");o.data("translation-time",n),o.data("translation-provider","chrome-ai"),setTimeout(()=>{t("#ChromeAiTranslator-widget-model .atlt_save_strings").prop("disabled",!1),t("#ChromeAiTranslator-widget-model .atlt_translate_progress").fadeOut("slow")},2500)},l=a=>{t("#atlt-chromeai-disabled-message").on("click",n=>{n.preventDefault();const o="#atlt-dialog";t(o).dialog("instance")&&t(o).dialog("close");const r=t("#atlt-chromeai-disabled-message-content").html(a);e(),r.dialog(r.dialog("instance")?"open":{title:"Chrome AI Translator Status",modal:!0,width:500,draggable:!1,closeOnEscape:!0,buttons:{Cancel:function(){t(this).dialog("close")}},close:function(){t(this).dialog("destroy")}})})},i=e=>{t("#ChromeAiTranslator_settings_btn").hide(),t("#atlt-chromeai-disabled-message").removeClass("d-none").show(),l(e)}})(jQuery);